METHOD: System.Boolean VSharp.Test.Tests.Unsafe.ClassSymbolicUnsafeRead2(System.Int32)
RESULT: Totally 2 states:
True
MEMORY DUMP:
Path condition: !(1 == i)
--------------- Concrete memory: ---------------
2 ==> x: VSharp.Test.Tests.Unsafe+SequentialStruct; y: VSharp.Test.Tests.Unsafe+SequentialStruct
--------------- Types tokens: ---------------
2 ==> VSharp.Test.Tests.Unsafe+SequentialClassWithStructsInside
--------------- Stack: ---------------
key = __loc__0, value = VSharp.Test.Tests.Unsafe+SequentialStruct STRUCT [
	| x ~> 3
	| y ~> 4]
key = __loc__1, value = Combine(Slice(1, i, 8 + i), Slice(2, -4 + i, 4 + i), Slice(3, -8 + i, i), Slice(4, -12 + i, -4 + i))
key = __loc__2, value = 0
key = __loc__3, value = (HeapPtr HeapLocation { term = Concrete ([2u], AddressType)
               hc = 659009009 } as System.Byte, offset = 0)
key = __loc__4, value = (HeapPtr HeapLocation { term = Concrete ([2u], AddressType)
               hc = 659009009 } as System.Int64, offset = i)
key = __tmp__VSharp.Test.Tests.Unsafe+SequentialStruct, value = VSharp.Test.Tests.Unsafe+SequentialStruct STRUCT [
	| x ~> 1
	| y ~> 2]
Initialized types = { VSharp.Test.Tests.Unsafe, VSharp.Test.Tests.Unsafe+SequentialClassWithStructsInside, VSharp.Test.Tests.Unsafe+SequentialStruct, System.Object }

True
MEMORY DUMP:
Path condition: 1 == i /\ 216172782147338240 == Combine(Slice(1, i, 8 + i), Slice(2, -4 + i, 4 + i), Slice(3, -8 + i, i), Slice(4, -12 + i, -4 + i))
--------------- Concrete memory: ---------------
2 ==> x: VSharp.Test.Tests.Unsafe+SequentialStruct; y: VSharp.Test.Tests.Unsafe+SequentialStruct
--------------- Types tokens: ---------------
2 ==> VSharp.Test.Tests.Unsafe+SequentialClassWithStructsInside
--------------- Stack: ---------------
key = __loc__0, value = VSharp.Test.Tests.Unsafe+SequentialStruct STRUCT [
	| x ~> 3
	| y ~> 4]
key = __loc__1, value = Combine(Slice(1, i, 8 + i), Slice(2, -4 + i, 4 + i), Slice(3, -8 + i, i), Slice(4, -12 + i, -4 + i))
key = __loc__2, value = 0
key = __loc__3, value = (HeapPtr HeapLocation { term = Concrete ([2u], AddressType)
               hc = 659009009 } as System.Byte, offset = 0)
key = __loc__4, value = (HeapPtr HeapLocation { term = Concrete ([2u], AddressType)
               hc = 659009009 } as System.Int64, offset = i)
key = __tmp__VSharp.Test.Tests.Unsafe+SequentialStruct, value = VSharp.Test.Tests.Unsafe+SequentialStruct STRUCT [
	| x ~> 1
	| y ~> 2]
Initialized types = { VSharp.Test.Tests.Unsafe, VSharp.Test.Tests.Unsafe+SequentialClassWithStructsInside, VSharp.Test.Tests.Unsafe+SequentialStruct, System.Object }
