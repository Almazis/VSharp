METHOD: System.Boolean VSharp.Test.Tests.Unsafe.StructInsideArraySymbolicUnsafeRead(System.Int32)
RESULT: Totally 2 states:
True
MEMORY DUMP:
Path condition: !(1 == i)
--------------- Concrete memory: ---------------
2 ==> VSharp.Test.Tests.Unsafe+SequentialStruct[]
--------------- Types tokens: ---------------
2 ==> VSharp.Test.Tests.Unsafe+SequentialStruct[]
--------------- Stack: ---------------
key = __loc__0, value = Combine(Slice(x, -8 * i / 8 + i, -8 * i / 8 + i + 8), Slice(y, -4 + -8 * i / 8 + i, -8 * i / 8 + i + 4), Slice(x, -8 + -8 * i / 8 + i, -8 + -8 * i / 8 + i + 8), Slice(y, -4 + -8 + -8 * i / 8 + i, -8 + -8 * i / 8 + i + 4))
key = __loc__1, value = 0
key = __loc__2, value = (HeapPtr HeapLocation { term = Concrete ([2u], AddressType)
               hc = 659009009 } as System.Byte, offset = 16)
key = __loc__3, value = (HeapPtr HeapLocation { term = Concrete ([2u], AddressType)
               hc = 659009009 } as System.Int64, offset = 16 + i)
key = __tmp__VSharp.Test.Tests.Unsafe+SequentialStruct, value = VSharp.Test.Tests.Unsafe+SequentialStruct STRUCT [
	| x ~> 5
	| y ~> 6]
Initialized types = { VSharp.Test.Tests.Unsafe, VSharp.Test.Tests.Unsafe+SequentialStruct }

True
MEMORY DUMP:
Path condition: 1 == i /\ 216172782147338240 == Combine(Slice(x, -8 * i / 8 + i, -8 * i / 8 + i + 8), Slice(y, -4 + -8 * i / 8 + i, -8 * i / 8 + i + 4), Slice(x, -8 + -8 * i / 8 + i, -8 + -8 * i / 8 + i + 8), Slice(y, -4 + -8 + -8 * i / 8 + i, -8 + -8 * i / 8 + i + 4))
--------------- Concrete memory: ---------------
2 ==> VSharp.Test.Tests.Unsafe+SequentialStruct[]
--------------- Types tokens: ---------------
2 ==> VSharp.Test.Tests.Unsafe+SequentialStruct[]
--------------- Stack: ---------------
key = __loc__0, value = Combine(Slice(x, -8 * i / 8 + i, -8 * i / 8 + i + 8), Slice(y, -4 + -8 * i / 8 + i, -8 * i / 8 + i + 4), Slice(x, -8 + -8 * i / 8 + i, -8 + -8 * i / 8 + i + 8), Slice(y, -4 + -8 + -8 * i / 8 + i, -8 + -8 * i / 8 + i + 4))
key = __loc__1, value = 0
key = __loc__2, value = (HeapPtr HeapLocation { term = Concrete ([2u], AddressType)
               hc = 659009009 } as System.Byte, offset = 16)
key = __loc__3, value = (HeapPtr HeapLocation { term = Concrete ([2u], AddressType)
               hc = 659009009 } as System.Int64, offset = 16 + i)
key = __tmp__VSharp.Test.Tests.Unsafe+SequentialStruct, value = VSharp.Test.Tests.Unsafe+SequentialStruct STRUCT [
	| x ~> 5
	| y ~> 6]
Initialized types = { VSharp.Test.Tests.Unsafe, VSharp.Test.Tests.Unsafe+SequentialStruct }
